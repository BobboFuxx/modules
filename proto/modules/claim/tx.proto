syntax = "proto3";
package ignite.modules.claim;

// this line is used by starport scaffolding # proto/tx/import

import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

import "modules/claim/params.proto";


option go_package = "github.com/ignite/modules/x/claim/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc ClaimInitial(MsgClaimInitial) returns (MsgClaimInitialResponse);

  // UpdateParams defines a governance operation for updating the x/mint module
  // parameters. The authority is hard-coded to the x/gov module account.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
}

message MsgClaimInitial {
  option (cosmos.msg.v1.signer) = "claimer";
  option (amino.name)           = "modules/x/claim/MsgClaimInitial";

  // claimer is the address making the claim
  string claimer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgClaimInitialResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name)           = "modules/x/claim/MsgUpdateParams";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/mint parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}

// this line is used by starport scaffolding # proto/tx/message
